nfd:
  channel: stable
  image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:9e06ddd109ac3a6e829f1d49f2ffad3c0ae78f7667fdeededa2540a3371478c9
  configData:
    core:
      sleepInterval: 60s
    sources:
      pci:
        deviceClassWhitelist:
          - "0200"
          - "03"
          - "12"
        deviceLabelFields:
          - "vendor"

gpuOperator:
  channel: v24.3
  policy:
    cdi:
      default: false
      enabled: false
    daemonsets:
      rollingUpdate:
        maxUnavailable: "1"
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
      updateStrategy: RollingUpdate
    dcgm:
      enabled: true
    dcgmExporter:
      config:
        name: ""
      enabled: true
      serviceMonitor:
        enabled: true
    devicePlugin:
      config:
        default: ""
        name: ""
      enabled: true
      mps:
        root: /run/nvidia/mps
    driver:
      certConfig:
        name: ""
      enabled: true
      kernelModuleConfig:
        name: ""
      licensingConfig:
        configMapName: ""
        nlsEnabled: true
      repoConfig:
        configMapName: ""
      upgradePolicy:
        autoUpgrade: true
        drain:
          deleteEmptyDir: false
          enable: false
          force: false
          timeoutSeconds: 300
        maxParallelUpgrades: 1
        maxUnavailable: 25%
        podDeletion:
          deleteEmptyDir: false
          force: false
          timeoutSeconds: 300
        waitForCompletion:
          timeoutSeconds: 0
      useNvidiaDriverCRD: false
      useOpenKernelModules: false
      virtualTopology:
        config: ""
    gdrcopy:
      enabled: false
    gds:apiVersion: v1
  kind: ConfigMap
  metadata:
    name: nvidia-dcgm-exporter-dashboard
    namespace: openshift-config-managed
  data:
    nvidia-dcgm-dashboard-cm.json: |
      enabled: false
    gfd:
      enabled: true
    kataManager:
      config:
        artifactsDir: /opt/nvidia-gpu-operator/artifacts/runtimeclasses
    mig:
      strategy: single
    migManager:
      config:
        default: all-disabled
        name: default-mig-parted-config
      enabled: true
    nodeStatusExporter:
      enabled: true
    operator:
      defaultRuntime: crio
      runtimeClass: nvidia
      use_ocp_driver_toolkit: true
    sandboxDevicePlugin:
      enabled: true
    sandboxWorkloads:
      defaultWorkload: container
      enabled: false
    toolkit:
      enabled: true
      installDir: /usr/local/nvidia
    validator:
      plugin:
        env:
          - name: WITH_WORKLOAD
            value: "false"
    vfioManager:
      enabled: true
  vgpuDeviceManager:
    config:
      default: default
    enabled: true
  vgpuManager:
    enabled: false
